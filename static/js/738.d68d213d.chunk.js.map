{"version":3,"file":"static/js/738.d68d213d.chunk.js","mappings":"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","sources":["components/Card/Card.tsx","components/Collection/Collection.tsx","components/Collection/utils/createSrcImages.ts","components/TabBar/TabBar.tsx","store/api/slice/favorites.ts","hooks/useToggleFavorites.ts","pages/Marketplace/components/Collections/Collections.tsx","pages/Marketplace/components/Items/Items.tsx","pages/Marketplace/Marketplace.tsx"],"sourcesContent":["import \"./Card.css\";\r\nimport { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { createSrcAvatar, createSrcImg } from \"../../utils/createSrc\";\r\nimport { useToggleFavorites } from \"../../hooks/useToggleFavorites\";\r\nimport type { RootState } from \"../../store\";\r\nimport type { Item } from \"../../types/Types\";\r\n\r\ninterface Props {\r\n  item: Item;\r\n}\r\n\r\nexport const Card = ({ item }: Props): JSX.Element => {\r\n  const { id, creator } = item;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const profile = useSelector((state: RootState) => state.auth.profile);\r\n  const isFavorite = !!profile?.favorites?.find((e) => e.id === id);\r\n  const [isHover, setIsHover] = useState(false);\r\n  const { toggleFavorites, isLoading } = useToggleFavorites();\r\n\r\n  const srcImg = createSrcImg(id);\r\n  const srcAvatar = createSrcAvatar(creator);\r\n\r\n  const handleClick = (e: React.MouseEvent<SVGSVGElement>): void => {\r\n    e.preventDefault();\r\n    if (!isLoading) {\r\n      if (!profile) {\r\n        navigate(\"/login\");\r\n      } else toggleFavorites(id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Link to={\"/i/\" + id}>\r\n      <div\r\n        className=\"card smart\"\r\n        onMouseEnter={() => setIsHover(true)}\r\n        onMouseLeave={() => setIsHover(false)}\r\n      >\r\n        {creator !== profile?.login ? (\r\n          <svg\r\n            className=\"card-heart\"\r\n            viewBox=\"0 0 24 24\"\r\n            style={{\r\n              ...(isFavorite ? { fill: \"#a259ff\" } : { fill: \"none\" }),\r\n              ...(isHover\r\n                ? { visibility: \"visible\" }\r\n                : { visibility: \"hidden\" }),\r\n              ...(isLoading ? { cursor: \"not-allowed\" } : {}),\r\n            }}\r\n            onClick={handleClick}\r\n          >\r\n            <path d=\"M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z\" />\r\n          </svg>\r\n        ) : null}\r\n        <img className=\"card-image\" src={srcImg} alt=\"card\" />\r\n        <div className=\"card-body\">\r\n          <div className=\"card-info\">\r\n            <div className=\"work-sans h5\">{item.name}</div>\r\n            <div className=\"card-creator\">\r\n              <img\r\n                className=\"card-creator-avatar\"\r\n                src={srcAvatar}\r\n                alt=\"avatar creator\"\r\n              />\r\n              <p className=\"space-mono\">{item.creator}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-footer\">\r\n            <div className=\"card-price\">\r\n              <div className=\"caption-space\">Price</div>\r\n              <div className=\"base-body-space card-price-body\">\r\n                {item.price}\r\n              </div>\r\n            </div>\r\n            <div className=\"card-bid\">\r\n              <div className=\"caption-space\">Highest Bid</div>\r\n              <div className=\"base-body-space card-price-body\">\r\n                {item.highestBid}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n","import \"./Collection.css\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport type { Collection as ICollection } from \"../../types/Types\";\r\nimport { createSrcAvatar } from \"../../utils/createSrc\";\r\nimport { createSrcImages } from \"./utils/createSrcImages\";\r\n\r\ninterface Props {\r\n  collection: ICollection;\r\n}\r\n\r\nexport const Collection = ({ collection }: Props): JSX.Element => {\r\n  const [isLoadingMainPhoto, setIsLoadingMainPhoto] = useState(false);\r\n  const [isLoadingOther1Photo, setIsLoadingOther1Photo] = useState(false);\r\n  const [isLoadingOther2Photo, setIsLoadingOther2Photo] = useState(false);\r\n\r\n  const srcImg = createSrcImages(collection);\r\n  const srcAvatar = createSrcAvatar(collection.creator);\r\n\r\n  return (\r\n    <div className=\"collection column\">\r\n      <div className=\"collection-photos\">\r\n        <img\r\n          src={srcImg ? srcImg[0] : \"\"}\r\n          alt=\"collection main\"\r\n          className=\"collection-photo-main smart\"\r\n          style={{ visibility: isLoadingMainPhoto ? \"visible\" : \"hidden\" }}\r\n          onLoad={() => setIsLoadingMainPhoto(true)}\r\n        />\r\n        <div className=\"collection-frame\">\r\n          <img\r\n            src={srcImg ? srcImg[1] : \"\"}\r\n            alt=\"collection other\"\r\n            className=\"collection-photo-other smart\"\r\n            style={{ visibility: isLoadingOther1Photo ? \"visible\" : \"hidden\" }}\r\n            onLoad={() => setIsLoadingOther1Photo(true)}\r\n          />\r\n          <img\r\n            src={srcImg ? srcImg[2] : \"\"}\r\n            alt=\"collection other\"\r\n            className=\"collection-photo-other smart\"\r\n            style={{ visibility: isLoadingOther2Photo ? \"visible\" : \"hidden\" }}\r\n            onLoad={() => setIsLoadingOther2Photo(true)}\r\n          />\r\n          <Link to=\"/\">\r\n            <div className=\"collection-frame-number smart\">\r\n              <div className=\"space-mono h5\">\r\n                {\"+\"}\r\n                {collection.body.length}\r\n              </div>\r\n            </div>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"collection-info column\">\r\n        <div className=\"work-sans h5\">{collection.name}</div>\r\n        <Link to={collection.creator || \"/\"}>\r\n          <div className=\"collection-artist-card\">\r\n            <img src={srcAvatar} alt=\"\" className=\"artist-avatar\" />\r\n            <div className=\"base-body-work collection-artist-name\">\r\n              {collection.creator}\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import config from \"../../../config.json\";\r\nimport Endpoints from \"../../../store/api/endpoints\";\r\nimport type { Collection } from \"../../../types/Types\";\r\n\r\nexport const createSrcImages = (collection: Collection): string[] => {\r\n  return collection.body\r\n    .slice(0, 3)\r\n    .map((e) => config.server + Endpoints.IMAGE.IMG_ID + e.id);\r\n};\r\n","import \"./TabBar.css\";\r\n\r\ninterface Props {\r\n  props: { title: string; amt: number }[];\r\n  setTabBar: (index: number) => void;\r\n  active?: number;\r\n}\r\n\r\nexport const TabBar = ({ props, setTabBar, active }: Props): JSX.Element => {\r\n  return (\r\n    <div className=\"tab-bar\">\r\n      <div className=\"tab-bar-body wrapper\">\r\n        {props.map((elem, index) => (\r\n          <button\r\n            key={index}\r\n            className=\"tab-bar-button\"\r\n            onClick={(): void => setTabBar(index)}\r\n            data-active={active === index}\r\n          >\r\n            <div className=\"tab-bar-text work-sans\">{elem.title}</div>\r\n            <div className=\"tab-bar-num space-mono not-mobile\">{elem.amt}</div>\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import Endpoints from \"../endpoints\";\r\n\r\nimport {\r\n  transformItems,\r\n  transformProfile,\r\n} from \"../../../utils/transformResponse\";\r\nimport type { Item, Profile } from \"../../../types/Types\";\r\nimport { api } from \"..\";\r\n\r\nexport const favoritesAPI = api.injectEndpoints({\r\n  endpoints: (build) => ({\r\n    getFavorites: build.query<Item[], void>({\r\n      query: () => ({\r\n        url: Endpoints.FAVORITES.GET_FAVORITES,\r\n        credentials: \"include\",\r\n      }),\r\n      providesTags: [\"favorites\"],\r\n      transformResponse: transformItems,\r\n    }),\r\n    toggleFavorites: build.mutation<Profile, string>({\r\n      query: (itemId) => ({\r\n        url: Endpoints.FAVORITES.TOGGLE_FAVORITES,\r\n        method: \"POST\",\r\n        body: { itemId },\r\n        credentials: \"include\",\r\n      }),\r\n      transformResponse: transformProfile,\r\n      invalidatesTags: [\"favorites\"],\r\n    }),\r\n  }),\r\n});\r\n","import { useDispatch } from \"react-redux\";\r\nimport { favoritesAPI } from \"../store/api/slice/favorites\";\r\nimport { setProfile } from \"../store/slices/authSlice\";\r\n\r\nexport const useToggleFavorites = () => {\r\n  const dispatch = useDispatch();\r\n  const [toggleFavoritesAPI, { isLoading }] =\r\n    favoritesAPI.useToggleFavoritesMutation();\r\n\r\n  const toggleFavorites = (id: string) => {\r\n    toggleFavoritesAPI(id)\r\n      .unwrap()\r\n      .then((res) => dispatch(setProfile(res)));\r\n  };\r\n\r\n  return { toggleFavorites, isLoading };\r\n};\r\n","import { Collection } from \"../../../../components/Collection\";\r\nimport type { Collection as ICollection } from \"../../../../types/Types\";\r\n\r\ninterface Props {\r\n  collections: ICollection[];\r\n}\r\n\r\nexport const Collections = ({ collections }: Props): JSX.Element => {\r\n  return (\r\n    <>\r\n      {collections.map((e) => (\r\n        <Collection key={e.id} collection={e} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import { Card } from \"../../../../components/Card\";\r\nimport type { Item } from \"../../../../types/Types\";\r\n\r\ninterface Props {\r\n  items: Item[];\r\n}\r\n\r\nexport const Items = ({ items }: Props): JSX.Element => {\r\n  return (\r\n    <>\r\n      {items.map((e) => (\r\n        <Card key={e.id} item={e} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import \"./Marketplace.css\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { TabBar } from \"../../components/TabBar\";\r\nimport { Collections } from \"./components/Collections\";\r\nimport { Items } from \"./components/Items\";\r\nimport { searchAPI } from \"../../store/api/slice/search\";\r\nimport { useDebounce } from \"../../hooks/useDebounce\";\r\nimport glass from \"../../images/glass.svg\";\r\n\r\nexport const Marketplace = (): JSX.Element => {\r\n  const location = useLocation();\r\n\r\n  const [search, setSearch] = useState(location.state?.search || \"\");\r\n  const [tabBar, setTabBar] = useState(0);\r\n\r\n  const [searchRequest, setSearchRequest] = useState(search);\r\n\r\n  const { data: items } = searchAPI.useSearchItemQuery(searchRequest);\r\n  const { data: collections } =\r\n    searchAPI.useSearchCollectionQuery(searchRequest);\r\n  const refetch = useDebounce(setSearchRequest, 300);\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const { value } = e.target;\r\n    setSearch(value);\r\n    refetch(value);\r\n  };\r\n\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current?.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"marketplace\">\r\n      <div className=\"marketplace-header wrapper column\">\r\n        <div className=\"marketplace-header-main work-sans column\">\r\n          <div className=\"marketplace-headline\">Browse Marketplace</div>\r\n          <div className=\"marketplace-subhead\">\r\n            Browse through more than 50k NFTs on the NFT Marketplace.\r\n          </div>\r\n        </div>\r\n        <div className=\"marketplace-search\">\r\n          <input\r\n            ref={inputRef}\r\n            type=\"text\"\r\n            placeholder=\"Search your favorite NFTs\"\r\n            className=\"work-sans\"\r\n            value={search}\r\n            onChange={handleChange}\r\n          />\r\n          <img src={glass} alt=\"search\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"marketplace-main\">\r\n        <TabBar\r\n          props={[\r\n            { title: \"NFTs\", amt: items?.length || 0 },\r\n            { title: \"Collections\", amt: collections?.length || 0 },\r\n          ]}\r\n          setTabBar={setTabBar}\r\n          active={tabBar}\r\n        />\r\n        <div className=\"marketplace-main-body-bg\">\r\n          <div className=\"marketplace-main-body wrapper\">\r\n            {tabBar === 0 ? items ? <Items items={items} /> : \"No Items\" : null}\r\n            {tabBar === 1 ? (\r\n              collections ? (\r\n                <Collections collections={collections} />\r\n              ) : (\r\n                \"No Collections\"\r\n              )\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Marketplace;\r\n"],"names":["Card","_ref","_profile$favorites","item","id","creator","navigate","useNavigate","profile","useSelector","state","auth","isFavorite","favorites","find","e","_useState","useState","_useState2","_slicedToArray","isHover","setIsHover","_useToggleFavorites","useToggleFavorites","toggleFavorites","isLoading","srcImg","createSrcImg","srcAvatar","createSrcAvatar","_jsx","Link","to","children","_jsxs","className","onMouseEnter","onMouseLeave","login","viewBox","style","_objectSpread","fill","visibility","cursor","onClick","preventDefault","d","src","alt","name","price","highestBid","Collection","collection","isLoadingMainPhoto","setIsLoadingMainPhoto","_useState3","_useState4","isLoadingOther1Photo","setIsLoadingOther1Photo","_useState5","_useState6","isLoadingOther2Photo","setIsLoadingOther2Photo","body","slice","map","config","Endpoints","IMAGE","IMG_ID","createSrcImages","onLoad","length","TabBar","props","setTabBar","active","elem","index","title","amt","favoritesAPI","api","injectEndpoints","endpoints","build","getFavorites","query","url","FAVORITES","GET_FAVORITES","credentials","providesTags","transformResponse","transformItems","mutation","itemId","TOGGLE_FAVORITES","method","transformProfile","invalidatesTags","dispatch","useDispatch","_favoritesAPI$useTogg","useToggleFavoritesMutation","_favoritesAPI$useTogg2","toggleFavoritesAPI","unwrap","then","res","setProfile","Collections","collections","_Fragment","Items","items","Marketplace","_location$state","location","useLocation","search","setSearch","tabBar","searchRequest","setSearchRequest","searchAPI","useSearchItemQuery","data","useSearchCollectionQuery","refetch","useDebounce","inputRef","useRef","useEffect","_inputRef$current","current","focus","ref","type","placeholder","value","onChange","target","glass"],"sourceRoot":""}